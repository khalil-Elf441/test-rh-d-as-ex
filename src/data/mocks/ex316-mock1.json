
{
  "examId": "ex316-1",
  "title": "OpenShift Virtualization Specialist (EX316) â€” Mock 1: Comprehensive Skills Assessment",
  "description": "A comprehensive exam covering a wide range of objectives including deployment, networking, storage, and VM lifecycle management.",
  "timeLimit": "4 hours",
  "tasks": [
    {
      "id": "task01",
      "title": "Deploy and configure a multi-homed database server",
      "sections": [
        {
          "title": "Namespace and VM Provisioning",
          "notice": "Perform all actions for this task in a new namespace named 'db-prod'.",
          "subtasks": [
            "Create a new namespace named 'db-prod'.",
            "Create a NetworkAttachmentDefinition named 'storage-net' in the 'db-prod' namespace for a linux-bridge network.",
            "Provision a new VM named 'db-server' from the RHEL9 template in the 'db-prod' namespace.",
            "Customize the VM to have 2 CPUs and 4Gi of memory.",
            "Attach 'db-server' to the 'storage-net' NAD as a secondary network interface.",
            "Inside the guest OS, install the 'mariadb-server' package and enable the service to start on boot."
          ]
        }
      ]
    },
    {
      "id": "task02",
      "title": "Configure tiered storage for the database server",
      "sections": [
        {
          "title": "Disk and Volume Management",
          "notice": "The database requires separate disks for data and logs. Perform all actions in the 'db-prod' namespace.",
          "subtasks": [
            "Create a 20Gi PVC named 'db-data-disk' using a fast, block-mode capable StorageClass.",
            "Create a 10Gi PVC named 'db-log-disk' using a standard, filesystem-mode StorageClass.",
            "Attach both PVCs to the 'db-server' VM as distinct data volumes.",
            "Log into the 'db-server' guest OS.",
            "Create an XFS filesystem on the log disk.",
            "Mount the log disk filesystem persistently on '/var/log/mariadb'."
          ]
        }
      ]
    },
    {
      "id": "task03",
      "title": "Expose the database and configure access control",
      "sections": [
        {
          "title": "Service, Route, and RBAC Configuration",
          "notice": "Make the database accessible and restrict user permissions. Perform all actions in the 'db-prod' namespace.",
          "subtasks": [
            "Create a ClusterIP service named 'db-internal-svc' to expose port 3306 of the 'db-server' VM.",
            "Create a user named 'db-viewer'.",
            "Create a new Role named 'vm-viewer-role' in the 'db-prod' namespace that only allows 'get', 'list', and 'watch' verbs on VirtualMachine resources.",
            "Bind the 'vm-viewer-role' to the 'db-viewer' user using a RoleBinding."
          ]
        }
      ]
    },
    {
      "id": "task04",
      "title": "Create a custom template with cloud-init",
      "sections": [
        {
          "title": "Template Generation and Customization",
          "notice": "Create a generic web server template. Perform all actions in a new namespace named 'templates'.",
          "subtasks": [
            "Create a new namespace named 'templates'.",
            "Create a new VM template named 'web-server-template'.",
            "Configure the template to use cloud-init to install 'nginx' and create a user 'webadmin' with sudo access.",
            "Add a parameter to the template to allow specifying the VM name at deployment."
          ]
        }
      ]
    },
    {
      "id": "task05",
      "title": "Deploy and secure a web server from the custom template",
      "sections": [
        {
          "title": "VM Deployment and Network Policy",
          "notice": "Deploy a web server and ensure it can connect to the database. Perform all actions in a new namespace named 'web-prod'.",
          "subtasks": [
            "Create a new namespace named 'web-prod'.",
            "Deploy a new VM named 'web-server-1' from the 'web-server-template' located in the 'templates' namespace.",
            "Create a NetworkPolicy that allows 'web-server-1' to connect to the 'db-internal-svc' in the 'db-prod' namespace on port 3306."
          ]
        }
      ]
    },
    {
      "id": "task06",
      "title": "Backup and restore the web server VM",
      "sections": [
        {
          "title": "OADP Backup and Restore",
          "notice": "Use OADP to protect and recover the web server. Perform all actions in the 'web-prod' namespace.",
          "subtasks": [
            "Ensure the OADP operator is functional.",
            "Create a 'Backup' of the 'web-server-1' VM.",
            "After the backup completes, delete the 'web-server-1' VM and its associated PVCs.",
            "Create a 'Restore' from the backup to recover the VM.",
            "Verify the VM is restored and functional."
          ]
        }
      ]
    },
    {
      "id": "task07",
      "title": "Perform a live migration and node maintenance",
      "sections": [
        {
          "title": "Live Migration and Node Drain",
          "notice": "A worker node needs to be updated. Safely migrate the 'db-server' VM off it.",
          "subtasks": [
            "Identify the node where 'db-server' is running.",
            "Initiate a live migration for the 'db-server' VM to any other available worker node.",
            "Once the migration is complete, prepare the original node for maintenance by tainting and draining it.",
            "Verify no VMs are running on the drained node."
          ]
        }
      ]
    },
    {
      "id": "task08",
      "title": "Clone a VM's disk for offline analysis",
      "sections": [
        {
          "title": "DataVolume Cloning",
          "notice": "Create a copy of the 'db-data-disk' PVC. Perform all actions in the 'db-prod' namespace.",
          "subtasks": [
            "Create a new DataVolume named 'db-data-clone-dv'.",
            "Configure the source of the DataVolume to be the 'db-data-disk' PVC.",
            "Verify a new PVC is created containing a clone of the data."
          ]
        }
      ]
    },
    {
      "id": "task09",
      "title": "Configure a health probe for the web server",
      "sections": [
        {
          "title": "Readiness Probe",
          "notice": "Ensure the 'web-server-1' only receives traffic when Nginx is responsive. Perform actions in the 'web-prod' namespace.",
          "subtasks": [
            "Edit the 'web-server-1' VirtualMachine resource.",
            "Add a readiness probe that performs an HTTP GET request on port 80.",
            "Set the initial delay to 60 seconds and a period of 10 seconds."
          ]
        }
      ]
    },
    {
      "id": "task10",
      "title": "Create and restore a VM snapshot",
      "sections": [
        {
          "title": "Snapshot and Restore",
          "notice": "Take a snapshot of the 'db-server' and revert it. Perform actions in the 'db-prod' namespace.",
          "subtasks": [
            "Create a snapshot of the 'db-server' VM.",
            "After the snapshot is complete, log into the VM and delete a critical file.",
            "Restore the VM from the snapshot to recover the deleted file."
          ]
        }
      ]
    }
  ]
}
