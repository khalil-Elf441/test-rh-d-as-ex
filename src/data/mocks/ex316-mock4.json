{
  "examId": "ex316-4",
  "title": "OpenShift Virtualization Specialist (EX316) â€” Mock 4: Full Spectrum Exam IV",
  "description": "A comprehensive 12-task exam covering a wide range of objectives including high availability, scheduling, and failure recovery.",
  "timeLimit": "4 hours",
  "tasks": [
    {
      "id": "task01",
      "title": "Deploy a Guaranteed-QoS VM with Dedicated Resources",
      "sections": [
        {
          "title": "Dedicated CPU and Memory",
          "notice": "Deploy a VM for a latency-sensitive application in a new 'realtime-apps' namespace.",
          "subtasks": [
            "Create a new namespace named 'realtime-apps'.",
            "Deploy a VM named 'latency-critical-vm'.",
            "Set memory and CPU requests equal to the limits (e.g., 4Gi, 2 CPUs).",
            "Enable 'dedicatedCpuPlacement' to ensure CPU pinning.",
            "Verify the VM's underlying pod has the 'Guaranteed' QoS class."
          ]
        }
      ]
    },
    {
      "id": "task02",
      "title": "Configure High Availability for the VM",
      "sections": [
        {
          "title": "Health Probes and Eviction Strategy",
          "notice": "Ensure the 'latency-critical-vm' is resilient. Perform actions in the 'realtime-apps' namespace.",
          "subtasks": [
            "Add a liveness probe that checks a TCP port 9000.",
            "Add a watchdog device to the VM.",
            "Set the VM's 'evictionStrategy' to 'LiveMigrateIfPossible'."
          ]
        }
      ]
    },
    {
      "id": "task03",
      "title": "Configure Redundant Load Balancer VMs with Anti-Affinity",
      "sections": [
        {
          "title": "VM Anti-Affinity",
          "notice": "In a new 'infra-services' namespace, deploy two load balancer VMs that must not run on the same node.",
          "subtasks": [
            "Create a new namespace named 'infra-services'.",
            "Deploy two VMs, 'lb-1' and 'lb-2', with the label 'role=lb-pair'.",
            "Add a required 'podAntiAffinity' rule to both VMs to prevent co-location based on the 'role=lb-pair' label."
          ]
        }
      ]
    },
    {
      "id": "task04",
      "title": "Expose the Load Balancer VMs and Configure RBAC",
      "sections": [
        {
          "title": "Service and User Management",
          "notice": "Create a single service to balance traffic between the LBs and create a limited-access user. Perform actions in the 'infra-services' namespace.",
          "subtasks": [
            "Create a NodePort service that targets both 'lb-1' and 'lb-2' using the 'role=lb-pair' label.",
            "Create a user named 'net-op'.",
            "Create a Role that allows the 'net-op' user to get, list, and delete pods and services, but not VMs.",
            "Bind the Role to the 'net-op' user."
          ]
        }
      ]
    },
    {
      "id": "task05",
      "title": "Use Taints and Tolerations for a Dedicated GPU Node",
      "sections": [
        {
          "title": "Node Tainting and VM Tolerations",
          "notice": "A node with a GPU must be reserved for specific VMs. Deploy a VM that can use this node in a new 'ml-ops' namespace.",
          "subtasks": [
            "Create a new namespace named 'ml-ops'.",
            "Add a taint 'gpu=true:NoSchedule' to a worker node.",
            "Deploy a new VM named 'ml-training-vm' in the 'ml-ops' namespace.",
            "Add a toleration to the VM's specification to allow it to be scheduled on the tainted node."
          ]
        }
      ]
    },
    {
      "id": "task06",
      "title": "Attach a Disk and Install Custom Drivers on the GPU VM",
      "sections": [
        {
          "title": "Disk and Package Management",
          "notice": "Configure the 'ml-training-vm' with storage and necessary software. To install the driver, you must first configure a custom repository inside the VM. Create the file '/etc/yum.repos.d/gpu-drivers.repo' with the content: [gpu-drivers]\nname=GPU Drivers\nbaseurl=http://repo.example.com/gpu_drivers\nenabled=1\ngpgcheck=0. Perform actions in the 'ml-ops' namespace.",
          "subtasks": [
            "Create and attach a 50Gi PVC to the 'ml-training-vm'.",
            "Log into the VM and create a filesystem on the new disk.",
            "Install the 'corp-gpu-driver' package using the provided repository details."
          ]
        }
      ]
    },
    {
      "id": "task07",
      "title": "Simulate a Node Failure and Observe VM Recovery",
      "sections": [
        {
          "title": "Failure Simulation",
          "notice": "Test the HA configuration of the 'latency-critical-vm' by simulating a node failure.",
          "subtasks": [
            "Identify the node where 'latency-critical-vm' is running.",
            "Drain the node to trigger a live migration.",
            "Observe that the VM is successfully migrated to another node without downtime."
          ]
        }
      ]
    },
    {
      "id": "task08",
      "title": "Create a Custom Template from the GPU VM",
      "sections": [
        {
          "title": "Template Generation",
          "notice": "Create a reusable template from the configured 'ml-training-vm'. Perform actions in the 'ml-ops' namespace.",
          "subtasks": [
            "Generate a template named 'gpu-node-template' from the 'ml-training-vm'.",
            "Verify the template is created in the 'ml-ops' namespace."
          ]
        }
      ]
    },
    {
      "id": "task09",
      "title": "Clone the Latency-Critical VM's Disk",
      "sections": [
        {
          "title": "DataVolume Cloning",
          "notice": "Create a backup copy of the 'latency-critical-vm's' root disk. Perform actions in the 'realtime-apps' namespace.",
          "subtasks": [
            "Identify the root PVC for the 'latency-critical-vm'.",
            "Create a DataVolume that clones this PVC to a new PVC named 'latency-vm-disk-backup'."
          ]
        }
      ]
    },
    {
      "id": "task10",
      "title": "Configure a Preferred Node Affinity",
      "sections": [
        {
          "title": "Scheduling Preference",
          "notice": "A new VM should prefer to run in the 'east' region if possible. Deploy it in the 'ml-ops' namespace.",
          "subtasks": [
            "Label at least one worker node with 'region=east'.",
            "Deploy a new VM named 'reporting-vm'.",
            "Add a 'preferredDuringSchedulingIgnoredDuringExecution' node affinity rule with a high weight for the 'region=east' label."
          ]
        }
      ]
    },
    {
      "id": "task11",
      "title": "Backup and Restore the Load Balancer VMs",
      "sections": [
        {
          "title": "OADP Backup and Restore",
          "notice": "Backup the entire 'infra-services' namespace and restore it.",
          "subtasks": [
            "Create a backup of the 'infra-services' namespace using OADP.",
            "Delete the namespace.",
            "Restore the namespace from the backup."
          ]
        }
      ]
    },
    {
      "id": "task12",
      "title": "Troubleshoot a VM Stuck in Pending State",
      "sections": [
        {
          "title": "Debugging Scheduling",
          "notice": "A VM is failing to schedule. Diagnose and fix it in the 'infra-services' namespace.",
          "subtasks": [
            "Create a VM that requests an impossible amount of CPU (e.g., 1000 cores).",
            "Observe the VM is stuck in a 'Pending' state.",
            "Describe the VMI pod and find the scheduling failure event in the logs.",
            "Correct the CPU request to a reasonable value and verify the VM starts."
          ]
        }
      ]
    }
  ]
}