{
  "examId": "ex316-4",
  "title": "OpenShift Virtualization Specialist (EX316) â€” Mock 4: High Availability and Scheduling",
  "description": "This exam focuses on ensuring VM resilience through high availability configurations, advanced scheduling, and failure recovery.",
  "timeLimit": "4 hours",
  "tasks": [
    {
      "id": "task01",
      "title": "Deploy a critical application VM with a guaranteed QoS class",
      "sections": [
        {
          "title": "Guaranteed Quality of Service",
          "notice": "A low-latency trading application requires dedicated CPU and memory resources. Deploy it in a new 'trading-floor' namespace.",
          "subtasks": [
            "Create a new namespace named 'trading-floor'.",
            "Create a VM named 'trading-vm' in the new namespace.",
            "Set the memory and CPU requests equal to the memory and CPU limits (e.g., 4Gi memory, 2 CPUs).",
            "Enable the 'dedicatedCpuPlacement' feature for the VM to ensure CPU pinning.",
            "Verify the underlying pod for the VM has the 'Guaranteed' QoS class."
          ]
        }
      ]
    },
    {
      "id": "task02",
      "title": "Configure a pod anti-affinity rule for a pair of load balancer VMs",
      "sections": [
        {
          "title": "Redundant Load Balancers",
          "notice": "Deploy two load balancer VMs in a new 'net-infra' namespace and ensure they do not run on the same node.",
          "subtasks": [
            "Create a new namespace named 'net-infra'.",
            "Deploy two identical VMs named 'lb-vm-1' and 'lb-vm-2', both with the label 'app=loadbalancer'.",
            "For both VMs, add a required 'podAntiAffinity' rule.",
            "The rule should prevent scheduling on a node if another pod with the label 'app=loadbalancer' is already present."
          ]
        }
      ]
    },
    {
      "id": "task03",
      "title": "Set up a watchdog and health probes for the 'trading-vm'",
      "sections": [
        {
          "title": "VM Health and Application Monitoring",
          "notice": "The 'trading-vm' must be highly resilient. Perform actions in the 'trading-floor' namespace.",
          "subtasks": [
            "Add a watchdog device to the 'trading-vm' definition using the 'i6300esb' model.",
            "Add a liveness probe to the 'trading-vm' that performs a TCP socket check on port 9999.",
            "Log into the VM, install the 'watchdog' package, and ensure the service is running."
          ]
        }
      ]
    },
    {
      "id": "task04",
      "title": "Set the eviction strategy and test a node failure",
      "sections": [
        {
          "title": "Node Failure Recovery Strategy",
          "notice": "The load balancer VMs must be live-migrated if their node fails. Perform actions in the 'net-infra' namespace.",
          "subtasks": [
            "Set the 'evictionStrategy' for both 'lb-vm-1' and 'lb-vm-2' to 'LiveMigrateIfPossible'.",
            "Identify the node where 'lb-vm-1' is running.",
            "Cordon and drain the node to simulate a graceful shutdown.",
            "Observe that 'lb-vm-1' is live-migrated to another node."
          ]
        }
      ]
    },
    {
      "id": "task05",
      "title": "Use taints and tolerations to create a dedicated VM node",
      "sections": [
        {
          "title": "Node Tainting and Tolerations",
          "notice": "A specific node should only be used by virtualization workloads.",
          "subtasks": [
            "Add a taint 'workload=virtualization:NoSchedule' to one of your worker nodes.",
            "Edit the 'trading-vm' in the 'trading-floor' namespace.",
            "Add a toleration to the VM's specification that matches the taint.",
            "Verify the VM can be scheduled on the tainted node."
          ]
        }
      ]
    },
    {
      "id": "task06",
      "title": "Configure a custom route to expose a service on a specific path",
      "sections": [
        {
          "title": "Path-Based Routing",
          "notice": "Expose a service running on 'trading-vm' via a custom route at path '/api/trade'. Perform actions in the 'trading-floor' namespace.",
          "subtasks": [
            "Create a ClusterIP service for 'trading-vm' on port 8080.",
            "Create a Route resource.",
            "Configure the route to direct traffic for the path '/api/trade' to the created service.",
            "Verify the service is accessible via the route's host and path."
          ]
        }
      ]
    },
    {
      "id": "task07",
      "title": "Configure RBAC for a junior administrator",
      "sections": [
        {
          "title": "Least Privilege Access Control",
          "notice": "Create a user 'jr-admin' who can only start and stop VMs in the 'trading-floor' namespace.",
          "subtasks": [
            "Create a user named 'jr-admin'.",
            "Create a Role in the 'trading-floor' namespace.",
            "The role should grant permissions to 'get', 'list', and 'update' VirtualMachines, but only for the 'start' and 'stop' subresources.",
            "Bind this Role to the 'jr-admin' user."
          ]
        }
      ]
    },
    {
      "id": "task08",
      "title": "Clone a VM's disk for backup using DataVolumes",
      "sections": [
        {
          "title": "Manual Disk Backup",
          "notice": "Create a point-in-time copy of the 'trading-vm's' primary disk. Perform actions in the 'trading-floor' namespace.",
          "subtasks": [
            "Identify the PVC associated with the 'trading-vm's' root disk.",
            "Create a new DataVolume resource named 'trading-disk-clone'.",
            "Configure the source of the DataVolume to be the PVC of the trading VM.",
            "Verify that a new PVC is created and populated with a clone of the disk."
          ]
        }
      ]
    },
    {
      "id": "task09",
      "title": "Configure a VM to have affinity to a specific geographical region",
      "sections": [
        {
          "title": "Preferred Node Affinity",
          "notice": "The 'trading-vm' should prefer to run on nodes in the 'east' region, but can run elsewhere if no such nodes are available.",
          "subtasks": [
            "Label at least one worker node with 'region=east'.",
            "Edit the 'trading-vm' resource.",
            "Add a 'nodeAffinity' rule to the VM.",
            "Configure a 'preferredDuringSchedulingIgnoredDuringExecution' rule that gives a high weight to nodes with the 'region=east' label."
          ]
        }
      ]
    },
    {
      "id": "task10",
      "title": "Troubleshoot a VM that fails to start due to resource constraints",
      "sections": [
        {
          "title": "Debugging Scheduling Failures",
          "notice": "A VM is stuck in a 'Pending' state. Diagnose and fix the issue in a new 'test-lab' namespace.",
          "subtasks": [
            "Create a new namespace named 'test-lab'.",
            "Create a new VM that requests an impossible amount of memory (e.g., 1000Gi).",
            "Observe that the VM fails to schedule.",
            "Use 'oc describe' on the VMI or its pod to see events related to scheduling failure.",
            "Correct the VM's memory request to a reasonable value and verify that it starts."
          ]
        }
      ]
    }
  ]
}