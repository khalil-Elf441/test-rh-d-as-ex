{
  "examId": "ex316-2",
  "title": "OpenShift Virtualization Specialist (EX316) â€” Mock 2: Advanced Migration and High Availability",
  "description": "This exam focuses on migrating VMs from external hypervisors, ensuring high availability, and advanced networking.",
  "timeLimit": "4 hours",
  "tasks": [
    {
      "id": "task01",
      "title": "Migrate a VM from VMware vSphere",
      "sections": [
        {
          "title": "Migration Toolkit for Virtualization Setup",
          "notice": "You will migrate a VM from a simulated vSphere environment. First, configure the provider in a new namespace called 'vm-migration'.",
          "subtasks": [
            "Create a new namespace named 'vm-migration'.",
            "Install the 'Migration Toolkit for Virtualization' Operator.",
            "In the 'vm-migration' namespace, create a secret named 'vsphere-secret' containing the credentials for a mock vCenter server.",
            "Create a 'Provider' resource for VMware, referencing the secret, and verify the connection is successful."
          ]
        }
      ]
    },
    {
      "id": "task02",
      "title": "Plan and execute the vSphere VM migration",
      "sections": [
        {
          "title": "Migration Plan and Execution",
          "notice": "Migrate the VM named 'legacy-web-app' to the 'vm-migration' namespace.",
          "subtasks": [
            "Create a 'Plan' resource in the 'vm-migration' namespace.",
            "Map the source vSphere network to the default OpenShift pod network.",
            "Map the source vSphere datastore to the default OpenShift Container Storage class.",
            "Select the 'legacy-web-app' VM from the source provider inventory for migration.",
            "Create a 'Migration' resource to execute the plan.",
            "Monitor the migration until it succeeds and the new VM is running in OpenShift."
          ]
        }
      ]
    },
    {
      "id": "task03",
      "title": "Configure networking and expose the migrated VM",
      "sections": [
        {
          "title": "Service and Route Configuration",
          "notice": "The migrated 'legacy-web-app' VM runs a service on port 8080. Expose it externally.",
          "subtasks": [
            "Create a NodePort service named 'legacy-webapp-svc' that exposes port 8080 on the VM.",
            "Verify the service is accessible via its assigned NodePort from all cluster nodes."
          ]
        }
      ]
    },
    {
      "id": "task04",
      "title": "Deploy a highly available pair of database VMs",
      "sections": [
        {
          "title": "VM Deployment and Anti-Affinity",
          "notice": "Deploy two database VMs that must never run on the same physical node. Perform all actions in a new namespace named 'ha-db'.",
          "subtasks": [
            "Create a new namespace named 'ha-db'.",
            "Deploy a VM named 'db-main' with the label 'db-cluster=main'.",
            "Deploy a second VM named 'db-replica' with the same label.",
            "Add a required 'podAntiAffinity' rule to both VMs to prevent them from being scheduled on the same node based on the 'db-cluster=main' label.",
            "Verify the two VMs are running on different worker nodes."
          ]
        }
      ]
    },
    {
      "id": "task05",
      "title": "Configure shared storage for the database VMs",
      "sections": [
        {
          "title": "ReadWriteMany (RWX) Volume Configuration",
          "notice": "The database VMs need to share a volume for replication logs. Perform all actions in the 'ha-db' namespace.",
          "subtasks": [
            "Create a PVC named 'db-repl-logs' with 'ReadWriteMany' access mode and a size of 5Gi.",
            "Ensure you select a StorageClass that supports RWX volumes.",
            "Attach the 'db-repl-logs' PVC as a data volume to both the 'db-main' and 'db-replica' VMs."
          ]
        }
      ]
    },
    {
      "id": "task06",
      "title": "Configure RBAC for the database administrators",
      "sections": [
        {
          "title": "User and Role Management",
          "notice": "Create a user 'db-admin' who has full control over VMs only in the 'ha-db' namespace.",
          "subtasks": [
            "Create a user named 'db-admin'.",
            "Create a Role in the 'ha-db' namespace that grants all verbs ('*') on 'virtualmachines', 'virtualmachineinstances', and 'datavolumes' resources.",
            "Create a RoleBinding to bind this new role to the 'db-admin' user within the 'ha-db' namespace."
          ]
        }
      ]
    },
    {
      "id": "task07",
      "title": "Perform node maintenance on a database node",
      "sections": [
        {
          "title": "Node Drain and Eviction Strategy",
          "notice": "One of the database VMs must be live-migrated when its node is drained for maintenance.",
          "subtasks": [
            "Identify the node where the 'db-main' VM is running.",
            "Edit the 'db-main' VM and set its 'evictionStrategy' to 'LiveMigrate'.",
            "Drain the identified node, making sure to use flags that respect PodDisruptionBudgets and gracefully handle workloads.",
            "Verify that 'db-main' was successfully live-migrated to another node."
          ]
        }
      ]
    },
    {
      "id": "task08",
      "title": "Configure a watchdog device for the database VMs",
      "sections": [
        {
          "title": "VM Health and Responsiveness",
          "notice": "Ensure the database VMs will reboot if the guest OS hangs. Perform actions in the 'ha-db' namespace.",
          "subtasks": [
            "Add a watchdog device to both 'db-main' and 'db-replica' VMs.",
            "Configure the watchdog to use the 'i6300esb' model.",
            "Log into one of the VMs and ensure the watchdog kernel module is loaded."
          ]
        }
      ]
    },
    {
      "id": "task09",
      "title": "Import an Open Virtual Appliance (OVA) image",
      "sections": [
        {
          "title": "OVA Import",
          "notice": "A vendor has provided a firewall appliance as an OVA file hosted at http://example.com/firewall.ova. Import it into a new namespace 'security'.",
          "subtasks": [
            "Create a new namespace named 'security'.",
            "Create a DataVolume in the 'security' namespace configured to import from the OVA URL.",
            "The import process should create a VM named 'firewall-appliance'. Verify its creation."
          ]
        }
      ]
    },
    {
      "id": "task10",
      "title": "Cancel a running live migration",
      "sections": [
        {
          "title": "Migration Management",
          "notice": "A live migration for 'db-replica' was started by mistake. Cancel it before it completes.",
          "subtasks": [
            "Start a live migration for the 'db-replica' VM.",
            "Quickly identify the 'VirtualMachineInstanceMigration' (VMIM) object associated with the migration.",
            "Delete the VMIM object to cancel the migration process.",
            "Verify the 'db-replica' VM is still running on its original node."
          ]
        }
      ]
    }
  ]
}