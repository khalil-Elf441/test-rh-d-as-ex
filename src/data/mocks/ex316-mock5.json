{
  "examId": "ex316-5",
  "title": "OpenShift Virtualization Specialist (EX316) â€” Mock 5: Full Spectrum Review",
  "description": "This exam is a comprehensive review of all major domains, requiring you to switch between different skill sets quickly.",
  "timeLimit": "4 hours",
  "tasks": [
    {
      "id": "task01",
      "title": "Deploy and configure a multi-tier application",
      "sections": [
        {
          "title": "Web and Database Tiers",
          "notice": "Deploy a web server and a database server, each in its own namespace.",
          "subtasks": [
            "Create a namespace 'webapp-prod'.",
            "Create a namespace 'db-prod'.",
            "In 'webapp-prod', deploy a VM named 'webapp-vm' from a RHEL9 template. Inside the VM, install and enable 'httpd'.",
            "In 'db-prod', deploy a VM named 'db-vm' from a RHEL9 template. Inside the VM, install and enable 'postgresql-server'."
          ]
        }
      ]
    },
    {
      "id": "task02",
      "title": "Configure inter-namespace networking and security",
      "sections": [
        {
          "title": "Services and Network Policies",
          "notice": "The web app must connect to the database, but no other pods should be able to.",
          "subtasks": [
            "In the 'db-prod' namespace, create a ClusterIP service named 'db-svc' for the 'db-vm' on port 5432.",
            "In the 'db-prod' namespace, create a NetworkPolicy that allows ingress traffic to 'db-vm' only from pods in the 'webapp-prod' namespace.",
            "In the 'webapp-prod' namespace, expose the 'webapp-vm' with a NodePort service."
          ]
        }
      ]
    },
    {
      "id": "task03",
      "title": "Configure persistent storage and disk mounting for the database",
      "sections": [
        {
          "title": "Disk Management",
          "notice": "Add a dedicated disk for PostgreSQL data on 'db-vm'. Perform actions in the 'db-prod' namespace.",
          "subtasks": [
            "Create a 30Gi PVC named 'pg-data-pvc'.",
            "Attach this PVC as a data volume to the 'db-vm'.",
            "Log into the 'db-vm' guest OS.",
            "Create a new logical volume and format it with ext4.",
            "Mount the filesystem persistently on '/var/lib/pgsql'."
          ]
        }
      ]
    },
    {
      "id": "task04",
      "title": "Create a custom template from the web server VM",
      "sections": [
        {
          "title": "Template Generation",
          "notice": "Create a reusable template from the configured 'webapp-vm'. Perform actions in a new 'app-templates' namespace.",
          "subtasks": [
            "Create a new namespace named 'app-templates'.",
            "Generate a new template named 'frontend-template' from the 'webapp-vm' in the 'webapp-prod' namespace.",
            "Modify the template to add a parameter for the application version, to be used as a label on the VM."
          ]
        }
      ]
    },
    {
      "id": "task05",
      "title": "Deploy a staging version of the web app from the template",
      "sections": [
        {
          "title": "Template Deployment",
          "notice": "Use the new template to deploy a staging instance in a new 'webapp-staging' namespace.",
          "subtasks": [
            "Create a new namespace named 'webapp-staging'.",
            "Deploy a new VM named 'webapp-staging-vm' from the 'frontend-template'.",
            "Provide 'v1.1-staging' as the application version parameter during deployment."
          ]
        }
      ]
    },
    {
      "id": "task06",
      "title": "Perform a snapshot and restore of the staging web server",
      "sections": [
        {
          "title": "Snapshot and Restore",
          "notice": "Test disaster recovery on the staging VM. Perform actions in the 'webapp-staging' namespace.",
          "subtasks": [
            "Create a snapshot of 'webapp-staging-vm'.",
            "Delete the VM after the snapshot is complete.",
            "Restore the VM from the snapshot.",
            "Verify the VM is running correctly."
          ]
        }
      ]
    },
    {
      "id": "task07",
      "title": "Clone the production database for development use",
      "sections": [
        {
          "title": "VM Cloning",
          "notice": "Create a clone of the production database 'db-vm' for developers in a new 'db-dev' namespace.",
          "subtasks": [
            "Create a new namespace named 'db-dev'.",
            "Create a clone of the 'db-vm' from the 'db-prod' namespace into the 'db-dev' namespace.",
            "Name the new VM 'db-dev-clone'.",
            "Verify the clone starts and is functional."
          ]
        }
      ]
    },
    {
      "id": "task08",
      "title": "Perform a live migration of the production database",
      "sections": [
        {
          "title": "Live Migration",
          "notice": "The node hosting 'db-vm' needs urgent maintenance. Migrate the VM without downtime.",
          "subtasks": [
            "Initiate a live migration for the 'db-vm' in the 'db-prod' namespace.",
            "Monitor the migration process to ensure it completes successfully."
          ]
        }
      ]
    },
    {
      "id": "task09",
      "title": "Configure RBAC for a junior web administrator",
      "sections": [
        {
          "title": "User Access Control",
          "notice": "Create a user 'web-jr-admin' who can only view and restart web app VMs in both 'webapp-prod' and 'webapp-staging' namespaces.",
          "subtasks": [
            "Create a user named 'web-jr-admin'.",
            "Create a ClusterRole that allows 'get', 'list', 'watch' on VirtualMachines, and 'update' on the 'restart' subresource.",
            "Create RoleBindings in both the 'webapp-prod' and 'webapp-staging' namespaces to grant this ClusterRole to the 'web-jr-admin' user."
          ]
        }
      ]
    },
    {
      "id": "task10",
      "title": "Configure a health probe for the production database VM",
      "sections": [
        {
          "title": "Liveness Probe",
          "notice": "Ensure the 'db-vm' is automatically restarted if PostgreSQL is unresponsive. Perform actions in the 'db-prod' namespace.",
          "subtasks": [
            "Edit the 'db-vm' VirtualMachine resource.",
            "Add a liveness probe that performs a TCP socket check on port 5432.",
            "Set an appropriate initial delay and failure threshold."
          ]
        }
      ]
    }
  ]
}